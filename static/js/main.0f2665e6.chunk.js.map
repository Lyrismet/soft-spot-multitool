{"version":3,"sources":["Components/Calculator/DigitButton.jsx","Components/Calculator/OperationButton.jsx","Components/Calculator/Calculator.jsx","Components/Calculator/Calculator-modal.jsx","Components/Jokes/Jokes.jsx","Components/Jokes/Activity.jsx","Components/Jokes/Jokes-modal.jsx","Components/ToDoList/Todo.jsx","Components/ToDoList/Todoform.jsx","Components/ToDoList/Todolist.jsx","Components/ToDoList/Todolist-modal.jsx","Components/Weather/Weather.jsx","Components/Weather/Weather-modal.jsx","App.js","index.js"],"names":["DigitButton","_ref","dispatch","digit","_jsx","onClick","type","ACTIONS","ADD_DIGIT","payload","children","OperationButton","operation","className","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","overwrite","_objectSpread","currentOperand","includes","concat","previousOperand","evaluate","length","slice","_ref2","prev","parseFloat","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","_operand$split","split","_operand$split2","_slicedToArray","integer","decimal","format","Calculator","_useReducer","useReducer","_useReducer2","_useReducer2$","_jsxs","CalculatorModal","selectedComponent","setSelectedComponent","setIsModalOpen","_React$useState","React","useState","_React$useState2","open","setOpen","width","height","viewBox","fill","xmlns","rx","d","stroke","api","Jokes","_useState","_useState2","randomJoke","setRandomJoke","setup","punchline","fetch","then","res","json","result","Activity","randomActivity","setRandomActivity","activity","JokesModal","ToDo","todo","toggleTask","removeTask","complete","id","task","ToDoForm","addTask","userInput","setUserInput","handleSubmit","e","preventDefault","onSubmit","action","value","onChange","currentTarget","onKeyDown","key","placeholder","Todolist","todos","setTodos","_toConsumableArray","filter","handleToggle","map","Todo","newItem","Math","random","substr","TodolistModal","icons","Weather","query","setQuery","_React$useState3","_React$useState4","weather","setWeather","_React$useState5","_React$useState6","setShowInput","_React$useState7","_React$useState8","weatherClass","setWeatherClass","main","name","sys","country","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","round","temp","icon","cod","cx","cy","r","target","onKeyUp","evt","console","log","iconCode","document","querySelector","textContent","condition","getWeatherClass","catch","error","WeatherModal","App","isModalOpen","useEffect","mainButtons","window","innerWidth","classList","add","remove","href","src","process","alt","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.0f2665e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {ACTIONS} from \"./Calculator\";\r\n\r\nexport default function DigitButton({dispatch, digit}) {\r\n    return (\r\n        <button onClick={() => dispatch({type: ACTIONS.ADD_DIGIT, payload: {digit}})}>\r\n            {digit}\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\nimport {ACTIONS} from \"./Calculator\";\r\n\r\nexport default function OperationButton({dispatch, operation}) {\r\n    return (\r\n        <button className=\"calculator-body__sign\"\r\n                onClick={() => dispatch({type: ACTIONS.CHOOSE_OPERATION, payload: {operation}})}>\r\n            {operation}\r\n        </button>\r\n    )\r\n}","import React, {useReducer} from \"react\";\r\nimport DigitButton from \"./DigitButton\";\r\nimport OperationButton from \"./OperationButton\";\r\n\r\nexport const ACTIONS = {\r\n    ADD_DIGIT: \"add-digit\",\r\n    CHOOSE_OPERATION: \"choose-operation\",\r\n    CLEAR: \"clear\",\r\n    DELETE_DIGIT: \"delete-digit\",\r\n    EVALUATE: \"evaluate\",\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n    switch (type) {\r\n        case ACTIONS.ADD_DIGIT:\r\n            if (state.overwrite) {\r\n                return {\r\n                    ...state,\r\n                    currentOperand: payload.digit,\r\n                    overwrite: false,\r\n                }\r\n            }\r\n            if (payload.digit === \"0\" && state.currentOperand === \"0\") {\r\n                return state\r\n            }\r\n            if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\r\n                return state\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\r\n            }\r\n        case ACTIONS.CHOOSE_OPERATION:\r\n            if (state.currentOperand == null && state.previousOperand == null) {\r\n                return state\r\n            }\r\n\r\n            if (state.currentOperand == null) {\r\n                return {\r\n                    ...state,\r\n                    operation: payload.operation,\r\n                }\r\n            }\r\n\r\n            if (state.previousOperand == null) {\r\n                return {\r\n                    ...state,\r\n                    operation: payload.operation,\r\n                    previousOperand: state.currentOperand,\r\n                    currentOperand: null,\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                previousOperand: evaluate(state),\r\n                operation: payload.operation,\r\n                currentOperand: null,\r\n            }\r\n        case ACTIONS.CLEAR:\r\n            return {}\r\n        case ACTIONS.DELETE_DIGIT:\r\n            if (state.overwrite) {\r\n                return {\r\n                    ...state,\r\n                    overwrite: false,\r\n                    currentOperand: null,\r\n                }\r\n            }\r\n            if (state.currentOperand == null) return state\r\n            if (state.currentOperand.length === 1) {\r\n                return { ...state, currentOperand: null }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                currentOperand: state.currentOperand.slice(0, -1),\r\n            }\r\n        case ACTIONS.EVALUATE:\r\n            if (\r\n                state.operation == null ||\r\n                state.currentOperand == null ||\r\n                state.previousOperand == null\r\n            ) {\r\n                return state\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                overwrite: true,\r\n                previousOperand: null,\r\n                operation: null,\r\n                currentOperand: evaluate(state),\r\n            }\r\n    }\r\n}\r\n\r\nfunction evaluate({ currentOperand, previousOperand, operation }) {\r\n    const prev = parseFloat(previousOperand)\r\n    const current = parseFloat(currentOperand)\r\n    if (isNaN(prev) || isNaN(current)) return \"\"\r\n    let computation = \"\"\r\n    switch (operation) {\r\n        case \"+\":\r\n            computation = prev + current\r\n            break\r\n        case \"-\":\r\n            computation = prev - current\r\n            break\r\n        case \"*\":\r\n            computation = prev * current\r\n            break\r\n        case \"÷\":\r\n            computation = prev / current\r\n            break\r\n    }\r\n\r\n    return computation.toString()\r\n}\r\n\r\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\r\n    maximumFractionDigits: 0,\r\n})\r\nfunction formatOperand(operand) {\r\n    if (operand == null) return\r\n    const [integer, decimal] = operand.split(\".\")\r\n    if (decimal == null) return INTEGER_FORMATTER.format(integer)\r\n    return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\r\n}\r\n\r\nfunction Calculator() {\r\n    const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\r\n        reducer,\r\n        {}\r\n    )\r\n    return (\r\n        <div className=\"calculator-body\">\r\n            <div className=\"calculator-body__output\">\r\n                <div className=\"previous-operand\">{formatOperand(previousOperand)} {operation}</div>\r\n                <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\r\n            </div>\r\n            <DigitButton digit=\"1\" dispatch={dispatch}/>\r\n            <DigitButton digit=\"2\" dispatch={dispatch}/>\r\n            <DigitButton digit=\"3\" dispatch={dispatch}/>\r\n            <button className=\"calculator-body__button-text\"\r\n                    onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>del\r\n            </button>\r\n            <button className=\"calculator-body__button-text\" onClick={() => dispatch({type: ACTIONS.CLEAR})}>reset\r\n            </button>\r\n            <DigitButton digit=\"4\" dispatch={dispatch}/>\r\n            <DigitButton digit=\"5\" dispatch={dispatch}/>\r\n            <DigitButton digit=\"6\" dispatch={dispatch}/>\r\n            <OperationButton operation=\"+\" dispatch={dispatch}/>\r\n            <button className=\"span-three\" onClick={() => dispatch({type: ACTIONS.EVALUATE})}>=</button>\r\n            <DigitButton digit=\"7\" dispatch={dispatch}/>\r\n            <DigitButton digit=\"8\" dispatch={dispatch}/>\r\n            <DigitButton digit=\"9\" dispatch={dispatch}/>\r\n            <OperationButton operation=\"-\" dispatch={dispatch}/>\r\n            <DigitButton digit=\".\" dispatch={dispatch}/>\r\n            <DigitButton digit=\"0\" dispatch={dispatch}/>\r\n            <OperationButton operation=\"÷\" dispatch={dispatch}/>\r\n            <OperationButton operation=\"×\" dispatch={dispatch}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport Calculator from \"./Calculator\";\r\n\r\nconst CalculatorModal = ({ selectedComponent, setSelectedComponent, setIsModalOpen }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleButtonClick = () => {\r\n        setSelectedComponent(\"calculator\");\r\n        setOpen(true);\r\n        setIsModalOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setSelectedComponent(null);\r\n        setOpen(false);\r\n        setIsModalOpen(false);\r\n    };\r\n    return (\r\n\r\n        <div className=\"calculator\">\r\n            <button onClick={handleButtonClick} className=\"main__button-item green\">Calculator</button>\r\n            <div className={`calculator-window modal-window animated ${selectedComponent === \"calculator\" && open ? 'show' : '' }`}>\r\n                <button className=\"modal-window__close-button\" onClick={handleClose}>\r\n                    <svg onClick={() => {setSelectedComponent(null); setOpen(false)}} width=\"40\" height=\"40\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect width=\"50\" height=\"50\" rx=\"20\" fill=\"#74DD4F\"/>\r\n                        <path d=\"M16.3535 15.6465L34.0312 33.3242\" stroke=\"#1D2C53\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n                        <path d=\"M33.6777 16L16.0001 33.6777\" stroke=\"#1D2C53\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n                    </svg>\r\n                </button>\r\n                <Calculator />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalculatorModal;","import React from \"react\";\r\nimport {useState} from \"react\";\r\n\r\nconst api = {\r\n    url: \"https://official-joke-api.appspot.com/random_joke\"\r\n}\r\nfunction Jokes() {\r\n    const [randomJoke, setRandomJoke] = useState(null);\r\n    const generate = () => {\r\n        fetch(api.url).then(res => res.json()).then(result => {\r\n            setRandomJoke({\r\n                setup: result.setup,\r\n                punchline: result.punchline\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"jokes-section\">\r\n            <h1 className=\"jokes-section__title\">Generate random joke</h1>\r\n            {randomJoke ? (\r\n            <div className=\"jokes-section__answer\">\r\n                <p className=\"jokes-section__setup\">{randomJoke.setup}</p>\r\n                <p className=\"jokes-section__punchline\">{randomJoke.punchline}</p>\r\n            </div>\r\n            ) : null}\r\n            <button className=\"jokes-section__button\"\r\n            onClick={generate}\r\n            >generate!</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Jokes;","\r\nimport React, {useState} from \"react\";\r\n\r\nconst api = {\r\n    url: \"https://www.boredapi.com/api/activity\"\r\n}\r\nfunction Activity() {\r\n    const [randomActivity, setRandomActivity] = useState(null);\r\n    const generate = () => {\r\n        fetch(api.url).then(res => res.json()).then(result => {\r\n            setRandomActivity({\r\n                activity: result.activity\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"activity-section\">\r\n            <h1 className=\"activity-section__title\">Generate random activity</h1>\r\n            {randomActivity ? (\r\n            <div className=\"activity-section__answer\">\r\n                <p className=\"activity-section__setup\">{randomActivity?.activity}</p>\r\n            </div>\r\n            ) : null}\r\n            <button className=\"activity-section__button\" onClick={generate}>generate!</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Activity;","import React from 'react';\r\nimport Jokes from \"./Jokes\";\r\nimport Activity from \"./Activity\";\r\n\r\nconst JokesModal = ({ selectedComponent, setSelectedComponent, setIsModalOpen }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleButtonClick = () => {\r\n        setSelectedComponent(\"jokes\");\r\n        setOpen(true);\r\n        setIsModalOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setSelectedComponent(null);\r\n        setOpen(false);\r\n        setIsModalOpen(false);\r\n    };\r\n    return (\r\n\r\n        <div className=\"jokes\">\r\n            <button onClick={handleButtonClick} className=\"main__button-item pink\">Joke's</button>\r\n            <div className={`jokes-window modal-window animated ${selectedComponent === \"jokes\" && open ? 'show' : '' }`}>\r\n                <button className=\"modal-window__close-button\" onClick={handleClose}>\r\n                    <svg onClick={() => {setSelectedComponent(null); setOpen(false)}} width=\"40\" height=\"40\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect width=\"50\" height=\"50\" rx=\"20\" fill=\"#74DD4F\"/>\r\n                        <path d=\"M16.3535 15.6465L34.0312 33.3242\" stroke=\"#1D2C53\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n                        <path d=\"M33.6777 16L16.0001 33.6777\" stroke=\"#1D2C53\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n                    </svg>\r\n                </button>\r\n                <div className=\"jokes__body\">\r\n                    <Jokes />\r\n                    <Activity />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JokesModal;","import React from 'react';\r\nfunction ToDo({todo, toggleTask, removeTask}) {\r\n    return(\r\n        <div key={todo.id} className = \"todolist__tasks-item\">\r\n            <div className={todo.complete ? \"todolist__tasks-item-text strike\" : \"todolist__tasks-item-text\"}\r\n            onClick={() => toggleTask(todo.id)}>\r\n                {todo.task}\r\n            </div>\r\n            <button className = \"tasks-item__close-button\" onClick={() => removeTask(todo.id)}>\r\n                <svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect width=\"24.9028\" height=\"24.9028\" rx=\"12.4514\" fill=\"#182546\"/>\r\n                    <path d=\"M8.1449 7.79297L16.9494 16.5974\" stroke=\"#DDD84F\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                    <path d=\"M16.7732 7.96899L7.96873 16.7735\" stroke=\"#DDD84F\" stroke-width=\"2\"\r\n                          stroke-linecap=\"round\"/>\r\n                </svg>\r\n            </button>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ToDo;","import React, {useState} from \"react\";\r\nfunction ToDoForm({addTask}) {\r\n    const [userInput, setUserInput] = useState('')\r\n    const handleChange = (e) => {\r\n        setUserInput((e.currentTarget.value))\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTask(userInput)\r\n        setUserInput(\"\")\r\n\r\n    }\r\n    const handleKeyPress = (e) => {\r\n        if(e.key === \"Enter\"){\r\n            handleSubmit(e)\r\n        }\r\n\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit} action=\"\">\r\n            <input type=\"text\"\r\n            value={userInput}\r\n                   onChange={handleChange}\r\n                   onKeyDown={handleKeyPress}\r\n                   placeholder=\"Enter a task...\"\r\n            />\r\n            <button className=\"todolist__button-save\">Save</button>\r\n        </form>\r\n    )\r\n}\r\nexport default ToDoForm;","import Todo from \"./Todo\";\r\nimport ToDoForm from \"./Todoform\";\r\nimport React, {useState} from \"react\";\r\n\r\nfunction Todolist() {\r\n    const [todos, setTodos] = useState([]);\r\n    const addTask = (userInput) => {\r\n        if (userInput) {\r\n            const newItem = {\r\n                id: Math.random().toString(36).substr(2, 9),\r\n                task: userInput,\r\n                complete: false\r\n            }\r\n            setTodos([...todos, newItem])\r\n        }\r\n\r\n    }\r\n    const removeTask = (id) => {\r\n        setTodos([...todos.filter(todo => todo.id !== id)])\r\n\r\n    }\r\n    const handleToggle = (id) => {\r\n        setTodos([...todos.map((todo) => todo.id === id ? {...todo, complete: !todo.complete} : {...todo })])\r\n\r\n    }\r\n    return (\r\n        <div className=\"todolist__body\">\r\n            <h1 className=\"todolist__title\">To-do list: <span>{todos.length}</span></h1>\r\n            <div className=\"todolist__tasks\">\r\n\r\n\r\n                {todos.map((todo) => {\r\n                    return (\r\n                        <Todo\r\n                            todo={todo}\r\n                            key={todos.id}\r\n                            toggleTask={handleToggle}\r\n                            removeTask={removeTask}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n            <ToDoForm addTask={addTask}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todolist;","import React from 'react';\r\nimport Todolist from \"./Todolist\";\r\n\r\nconst TodolistModal = ({ selectedComponent, setSelectedComponent, setIsModalOpen }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleButtonClick = () => {\r\n        setSelectedComponent(\"todolist\");\r\n        setOpen(true);\r\n        setIsModalOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setSelectedComponent(null);\r\n        setOpen(false);\r\n        setIsModalOpen(false);\r\n    };\r\n    return (\r\n\r\n        <div className=\"todolist\">\r\n            <button onClick={handleButtonClick} className=\"main__button-item yellow\">To-Do List</button>\r\n            <div className={`todolist-window modal-window animated ${selectedComponent === \"todolist\" && open ? 'show' : '' }`}>\r\n                <button className=\"modal-window__close-button\" onClick={handleClose}>\r\n                    <svg onClick={() => {setSelectedComponent(null); setOpen(false)}} width=\"40\" height=\"40\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect width=\"50\" height=\"50\" rx=\"20\" fill=\"#74DD4F\"/>\r\n                        <path d=\"M16.3535 15.6465L34.0312 33.3242\" stroke=\"#1D2C53\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n                        <path d=\"M33.6777 16L16.0001 33.6777\" stroke=\"#1D2C53\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n                    </svg>\r\n                </button>\r\n                <Todolist />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodolistModal;","import React from \"react\";\r\n\r\n\r\nconst api = {\r\n    key: \"a72d83c9186b22629cf76ca4edff54ea\", base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\nconst icons = {\r\n    \"01d\": \"☀️\",\r\n    \"01n\": \"🌙\",\r\n    \"02d\": \"🌤️\",\r\n    \"02n\": \"🌤️\",\r\n    \"03d\": \"🌥️\",\r\n    \"03n\": \"🌥️\",\r\n    \"04d\": \"☁️\",\r\n    \"04n\": \"☁️\",\r\n    \"09d\": \"🌧️\",\r\n    \"09n\": \"🌧️\",\r\n    \"10d\": \"🌦️\",\r\n    \"10n\": \"🌦️\",\r\n    \"11d\": \"⛈️\",\r\n    \"11n\": \"⛈️\",\r\n    \"13d\": \"🌨️\",\r\n    \"13n\": \"🌨️\",\r\n    \"50d\": \"🌫️\",\r\n    \"50n\": \"🌫️\",\r\n};\r\n\r\nfunction Weather() {\r\n    const [query, setQuery] = React.useState('');\r\n    const [weather, setWeather] = React.useState({});\r\n    const [showInput, setShowInput] = React.useState(false);\r\n    const [weatherClass, setWeatherClass] = React.useState('');\r\n    const getWeatherClass = (condition) => {\r\n        switch (condition) {\r\n            case 'Clouds':\r\n                return 'clouds';\r\n            case 'Clear':\r\n                return 'sunny';\r\n            case 'Rain':\r\n            case 'Drizzle':\r\n                return 'rainy';\r\n            case 'Snow':\r\n                return 'snowy';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    const search = evt => {\r\n        if (evt.key === \"Enter\") {\r\n            fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    setQuery('');\r\n                    setWeather(result);\r\n                    console.log(result);\r\n                    const iconCode = result.weather[0].icon;\r\n                    const icon = icons[iconCode];\r\n                    const emoji = document.querySelector(\".weather__temp-emoji\");\r\n                    emoji.textContent = icon;\r\n                    setShowInput(true);\r\n\r\n                    if (result.cod === 404) {\r\n                        setShowInput(false);\r\n                    } else {\r\n                        setShowInput(true);\r\n                    }\r\n                    const condition = result.weather[0].main;\r\n                    setWeatherClass(getWeatherClass(condition));\r\n                })\r\n\r\n\r\n                .catch(error => {\r\n                    setShowInput(false);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n        return `${day} ${date} ${month} ${year}`;\r\n    }\r\n\r\n    return (<div className={`weather__body ${weatherClass}`}>\r\n            {(typeof weather.main != \"undefined\") ? (<div>\r\n                    <div className=\"weather__location-date\">\r\n                        <div className=\"weather__title-location\">{weather.name}, {weather.sys.country}</div>\r\n                        <div className=\"weather__title-date\">{dateBuilder(new Date())}</div>\r\n                    </div>\r\n                    <div className=\"weather__temp-info\">\r\n                        <div className=\"weather__temp-value\">{Math.round(weather.main.temp)}°C</div>\r\n                        <div className=\"weather__temp-state\">{weather.weather[0].main}</div>\r\n                        <div className=\"weather__temp-emoji\">{icons[weather.weather[0].icon]}️</div>\r\n                    </div>\r\n                </div>) : (weather.cod === \"404\" && typeof weather.main === \"undefined\") ? (\r\n                <div className=\"weather__error-message\">Incorrect city name. Please try again.</div>) : (\r\n                <div className=\"weather__input-message\">Enter a city name</div>)}\r\n            <div className=\"weather__search\">\r\n                <svg width=\"17\" height=\"17\" viewBox=\"0 0 18 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <circle cx=\"6.93585\" cy=\"6.93585\" r=\"5.93585\" stroke=\"#3F5CAD\" stroke-width=\"2\"/>\r\n                    <path\r\n                        d=\"M16.2075 18.5614C16.598 18.9519 17.2312 18.952 17.6217 18.5614C18.0122 18.1709 18.0122 17.5377 17.6217 17.1472L16.2075 18.5614ZM11.9835 11.509L11.2764 10.8019L9.8622 12.2161L10.5693 12.9232L11.9835 11.509ZM17.6217 17.1472L11.9835 11.509L10.5693 12.9232L16.2075 18.5614L17.6217 17.1472Z\"\r\n                        fill=\"#3F5CAD\"/>\r\n                </svg>\r\n                <input type=\"text\"\r\n                       className=\"weather__search-bar\"\r\n                       placeholder=\"New York, US\"\r\n                       onChange={e => setQuery(e.target.value)}\r\n                       value={query}\r\n                       onKeyUp={search}/>\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport Weather from './Weather';\r\n\r\nconst WeatherModal = ({selectedComponent, setSelectedComponent, setIsModalOpen}) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleButtonClick = () => {\r\n        setSelectedComponent(\"weather\");\r\n        setOpen(true);\r\n        setIsModalOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setSelectedComponent(null);\r\n        setOpen(false);\r\n        setIsModalOpen(false);\r\n    };\r\n    return (\r\n\r\n        <div className=\"weather\">\r\n            <button onClick={handleButtonClick} className=\"main__button-item blue\">Weather</button>\r\n            <div\r\n                className={`weather-window modal-window animated ${selectedComponent === \"weather\" && open ? 'show' : ''}`}>\r\n                <button className=\"modal-window__close-button\" onClick={handleClose}>\r\n                    <svg onClick={() => {\r\n                        setSelectedComponent(null);\r\n                        setOpen(false)\r\n                    }} width=\"40\" height=\"40\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect width=\"50\" height=\"50\" rx=\"20\" fill=\"#74DD4F\"/>\r\n                        <path d=\"M16.3535 15.6465L34.0312 33.3242\" stroke=\"#1D2C53\" stroke-width=\"4\"\r\n                              stroke-linecap=\"round\"/>\r\n                        <path d=\"M33.6777 16L16.0001 33.6777\" stroke=\"#1D2C53\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n                    </svg>\r\n                </button>\r\n                <Weather/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherModal;","import React from 'react';\r\n/*import './index.scss';*/\r\nimport './index.css';\r\nimport CalculatorModal from \"./Components/Calculator/Calculator-modal\";\r\nimport JokesModal from \"./Components/Jokes/Jokes-modal\";\r\nimport TodolistModal from \"./Components/ToDoList/Todolist-modal\";\r\nimport WeatherModal from \"./Components/Weather/Weather-modal\";\r\n\r\n\r\nfunction App() {\r\n    const [selectedComponent, setSelectedComponent] = React.useState(null);\r\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n    React.useEffect(() => {\r\n        const mainButtons = document.querySelector('.main__buttons');\r\n        if (isModalOpen && window.innerWidth <= 767) {\r\n            mainButtons.classList.add('mobile');\r\n        } else {\r\n            mainButtons.classList.remove('mobile');\r\n        }\r\n    }, [isModalOpen]);\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"header\">\r\n                <div className=\"header__author-sign\">\r\n                    <p className=\"header__clover\">🍀</p>\r\n                    <p className=\"header__sign\">built by <span>Lyrismet</span></p>\r\n                </div>\r\n                <div className=\"header__github-link\">\r\n                    <a href=\"https://github.com/Lyrismet\">GitHub Page</a>\r\n                </div>\r\n            </header>\r\n            <main className=\"main\">\r\n                <div className=\"main__intro\">\r\n                    <p className=\"main__text-morse\">.-- . .-.. -.-. --- -- . -.-.--</p>\r\n                    <h1 className=\"main__title\">Soft Spot</h1>\r\n                    <p className=\"main__subtitle\">Your cozy companion</p>\r\n                    <img src={process.env.PUBLIC_URL + '/logo192.png'} alt=\"\"/>\r\n                </div>\r\n                <div className=\"main__buttons\">\r\n                    <CalculatorModal selectedComponent={selectedComponent} setSelectedComponent={setSelectedComponent} setIsModalOpen={setIsModalOpen}/>\r\n                    <TodolistModal selectedComponent={selectedComponent} setSelectedComponent={setSelectedComponent} setIsModalOpen={setIsModalOpen}/>\r\n                    <WeatherModal selectedComponent={selectedComponent} setSelectedComponent={setSelectedComponent} setIsModalOpen={setIsModalOpen}/>\r\n                    <JokesModal selectedComponent={selectedComponent} setSelectedComponent={setSelectedComponent} setIsModalOpen={setIsModalOpen}/>\r\n\r\n                </div>\r\n            </main>\r\n            <footer className=\"footer\">\r\n                <p className=\"footer__author\">© 2023 Lyrismet</p>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n/*import './index.scss';*/\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <App />\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}